#
# Orb template file
#
# Before packing, replace ENVSUBST_ prefix texts by envsubst command
# https://github.com/a8m/envsubst
#

version: 2.1

description: |
  Update CircleCI Orbs versions
  https://github.com/sawadashota/orb-update

commands:
  default-config:
    description: Generate default configuration if not exists
    parameters:
      config:
        description: >
          Path of configuration for orb-update
          This option is for self testing. So please put config file at `.orb-update.yml`
        type: string
        default: .orb-update.yml
    steps:
      - run:
          name: Generate default configuration if not exists
          command: |
            if [ -e << parameters.config >> ]; then
              echo "detect configuration file"
            else
              echo "generate default configuration file"
              cat \<< EOS > << parameters.config >>
            target_files:
              - .circleci/config.yml

            repository:
              name: ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}

            github:
              pull_request: true

            base_branch: ${CIRCLE_BRANCH}

            filesystem:
              strategy: memory
            EOS
            fi

            echo "cat << parameters.config >>"
            cat << parameters.config >>

  orb-update:
    description: >
      Execute orb-update command via docker command.
      Update each Orb version and create Pull Request on GitHub.
      This command must be executed in docker.
      Because CircleCI's read only SSH key in turn overrides GITHUB_TOKEN when `git push`
    parameters: &parameters
      github_username:
        description: Username of GitHub Token's owner
        type: env_var_name
        default: GITHUB_USERNAME
      github_token:
        description: |
          GitHub Token to read/create Pull Request
          https://github.com/settings/tokens/new?scopes=repo,user:email&description=CircleCI%20for%20orb-update
        type: env_var_name
        default: GITHUB_TOKEN
      config:
        description: |
          Path of configuration for orb-update
          This option is for self testing. So please put config file at `.orb-update.yml`
        type: string
        default: .orb-update.yml
      docker_image_version:
        description: |
          Version of docker image sawadashota/orb-update
          https://hub.docker.com/r/sawadashota/orb-update
        type: string
        default: ${ENVSUBST_ORB_UPDATE_DOCKER_TAG} # will be replaced by envsubst
    steps:
      - run: docker pull sawadashota/orb-update:<< parameters.docker_image_version >>
      - run:
          name: Update Orbs
          command: |
            docker run --rm \
              -v $(pwd)/<< parameters.config >>:/orb-update/.orb-update.yml \
              -e GITHUB_USERNAME="${<< parameters.github_username >>}" \
              -e GITHUB_TOKEN="${<< parameters.github_token >>}" \
              sawadashota/orb-update:<< parameters.docker_image_version >> \
              orb-update -c /orb-update/.orb-update.yml
jobs:
  orb-update:
    description: >
      Execute orb-update command.
      Update each Orb version and create Pull Request on GitHub.
    machine: true
    parameters: *parameters
    steps:
      - checkout
      - setup_remote_docker
      - default-config:
          config: << parameters.config >>
      - orb-update:
          github_username: << parameters.github_username >>
          github_token: << parameters.github_token >>
          config: << parameters.config >>
          docker_image_version: << parameters.docker_image_version >>

examples:
  update-every-night:
    description: |
      Check and update orb every night.
    usage:
      orbs:
        orb-update: sawadashota/orb-update@${ENVSUBST_ORB_VERSION} # will be replaced by envsubst
      version: 2.1
      workflows:
        orb-update:
          jobs:
            - orb-update/orb-update:
                github_username: GITHUB_USERNAME
                github_token: GITHUB_TOKEN
          triggers:
            - schedule:
                cron: "0 19 * * *"
                filters:
                  branches:
                    only:
                      - master
